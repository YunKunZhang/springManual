<?xml version="1.0" encoding="UTF-8"?>
<beans>
    <bean id="userDao" class="com.example.springmanual.framework.dao.impl.UserDaoImpl"></bean>
    <bean id="userService" class="com.example.springmanual.framework.service.impl.UserServiceImpl">
        <property name="userDao" ref="userDao"></property>
    </bean>
    <bean id="demoController" class="com.example.springmanual.controller.DemoController">
        <property name="userService" ref="userService"></property>
    </bean>
    <!-- 切面 -->
    <bean id="logAspect" class="com.example.springmanual.framework.aspect.LogAspect">
        <!-- configure properties of aspect here as normal -->
    </bean>
    <!-- 配置切面 -->
    <aspect ref="logAspect">
        <!-- 配置切入点 -->
        <pointcut id="pointCutMethod"
                  expression="execution(* com.example.springmanual.framework.service.impl.UserServiceImpl.*(..))"/>
        <!-- 环绕通知 -->
        <around method="doAround" pointcut-ref="pointCutMethod"/>
        <!-- 前置通知 -->
        <before method="doBefore" pointcut-ref="pointCutMethod"/>
        <!-- 后置通知；returning属性：用于设置后置通知的第二个参数的名称，类型是Object -->
        <after-returning method="doAfterReturning" pointcut-ref="pointCutMethod" returning="result"/>
        <!-- 异常通知：如果没有异常，将不会执行增强；throwing属性：用于设置通知第二个参数的的名称、类型-->
        <after-throwing method="doAfterThrowing" pointcut-ref="pointCutMethod" throwing="e"/>
        <!-- 最终通知 -->
        <after method="doAfter" pointcut-ref="pointCutMethod"/>
    </aspect>
</beans>